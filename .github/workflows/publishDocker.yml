name: Docker

on:
  push:
    branches:
      - master
    tags:
      - v*
  workflow_dispatch:  # 添加手动触发的功能

env:
  IMAGE_NAME: nginxwebui
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  # 从 secrets 获取 Docker 密码或 Access Token

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码库
        uses: actions/checkout@v3

      - name: 构建 Java 项目
        run: mvn clean package

      - name: 构建镜像
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: 登录到 Docker Hub
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: 检查并重标已存在镜像
        run: |
          IMAGE_ID=$DOCKER_USERNAME/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # 获取 GitHub 事件中的分支名称
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # 对于 master 分支使用 latest 版本号
          VERSION=$(if [ "$BRANCH_NAME" == "master" ]; then echo "latest"; else echo $BRANCH_NAME; fi)

          echo "Checking if the image $IMAGE_ID:$VERSION exists on Docker Hub..."

          # 使用 Docker Hub API 检查是否存在该标签的镜像
          TAG_EXISTS=$(curl -s -u $DOCKER_USERNAME:$DOCKER_PASSWORD "https://hub.docker.com/v2/repositories/$DOCKER_USERNAME/$IMAGE_NAME/tags/$VERSION/" | jq -r '.name')

          if [ "$TAG_EXISTS" == "$VERSION" ]; then
            # 使用 github.run_number 计算新的标签
            PREV_RUN_NUMBER=$(( ${{ github.run_number }} - 1 ))
            echo "Tagging the existing image with run number: $PREV_RUN_NUMBER"
            
            # 给现有标签重新打上新的标签 (将远程镜像标签为 $VERSION 改为 $PREV_RUN_NUMBER)
            docker pull $IMAGE_ID:$VERSION
            docker tag $IMAGE_ID:$VERSION $IMAGE_ID:$PREV_RUN_NUMBER
            docker push $IMAGE_ID:$PREV_RUN_NUMBER
          else
            echo "No existing image found with tag $VERSION on Docker Hub."
          fi

      - name: 推送新的镜像
        run: |
          IMAGE_ID=$DOCKER_USERNAME/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # 获取 GitHub 事件中的分支名称
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # 根据分支名决定版本号
          VERSION=$(if [ "$BRANCH_NAME" == "master" ]; then echo "latest"; else echo $BRANCH_NAME; fi)

          # 推送新的版本标签的镜像
          echo "Pushing new image with version $VERSION..."
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
